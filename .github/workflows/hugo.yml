name: Deploy Hugo site to Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.145.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Cache Hugo CLI
        uses: actions/cache@v3
        with:
          path: ${{ runner.temp }}/hugo_cache
          key: ${{ runner.os }}-hugo-${{ env.HUGO_VERSION }}
          restore-keys: |
            ${{ runner.os }}-hugo-

      - name: Install Hugo and dependencies
        uses: ./.github/actions/install-dependencies
        with:
          hugo-version: ${{ env.HUGO_VERSION }}

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: Cache Hugo modules
        uses: actions/cache@v3
        with:
          path: /tmp/hugo_cache
          key: ${{ runner.os }}-hugomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-hugomod-

      - name: Clean build artifacts
        run: |
          rm -rf public
          rm -rf resources
          rm -rf .hugo_build.lock

      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: /tmp/hugo_cache
          HUGO_ENVIRONMENT: production
          TZ: America/Los_Angeles
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: List public directory contents
        run: |
          echo "Contents of public directory:"
          ls -R public

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
